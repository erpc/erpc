services:
  monitoring:
    build: ./monitoring
    ports:
      - "3000:3000"  # Grafana
      - "9090:9090"  # Prometheus
    environment:
      - SERVICE_ENDPOINT=host.docker.internal
      - SERVICE_PORT=4001
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - ./monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards
      - prometheus_data:/prometheus
      - grafana_data:/var/lib/grafana

  redis:
    container_name: erpc-redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    networks:
      erpc:

  postgresql:
    container_name: erpc-postgresql
    image: postgres:13.4
    restart: always
    environment:
      POSTGRES_USER: erpc
      POSTGRES_PASSWORD: erpc
      POSTGRES_DB: erpc
    ports:
      - "5432:5432"
    networks:
      erpc:

  # scylla:
  #   container_name: erpc-scylla
  #   image: scylladb/scylla:5.2.18
  #   restart: always
  #   command: --alternator-port=8067 --alternator-write-isolation=unsafe_rmw --seeds=erpc-scylla --smp 1 --memory 1G --overprovisioned 1 --api-address 0.0.0.0
  #   volumes:
  #     - "./scylla/scylla.yaml:/etc/scylla/scylla.yaml"
  #     - "./scylla/cassandra-rackdc.properties.dc1:/etc/scylla/cassandra-rackdc.properties"
  #     - "./scylla/mutant-data.txt:/mutant-data.txt"
  #   ports:
  #     - "8067:8067"
  #     - "9042:9042"
  #     - "9160:9160"
  #     - "10000:10000"
  #   networks:
  #     erpc:

networks:
  erpc:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: